// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: protos/membership.proto

package membership

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{0}
}

type OriginalDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId int32 `protobuf:"varint,1,opt,name=batchId,proto3" json:"batchId,omitempty"`
}

func (x *OriginalDataRequest) Reset() {
	*x = OriginalDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginalDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalDataRequest) ProtoMessage() {}

func (x *OriginalDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginalDataRequest.ProtoReflect.Descriptor instead.
func (*OriginalDataRequest) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{1}
}

func (x *OriginalDataRequest) GetBatchId() int32 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

type OriginalDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date               *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Prices             float32              `protobuf:"fixed32,2,opt,name=prices,proto3" json:"prices,omitempty"`
	RainfallColombo    float32              `protobuf:"fixed32,3,opt,name=rainfall_colombo,json=rainfallColombo,proto3" json:"rainfall_colombo,omitempty"`
	RainfallPuttalam   float32              `protobuf:"fixed32,4,opt,name=rainfall_puttalam,json=rainfallPuttalam,proto3" json:"rainfall_puttalam,omitempty"`
	RainfallKurunegala float32              `protobuf:"fixed32,5,opt,name=rainfall_kurunegala,json=rainfallKurunegala,proto3" json:"rainfall_kurunegala,omitempty"`
	MinTempColombo     float32              `protobuf:"fixed32,6,opt,name=min_temp_colombo,json=minTempColombo,proto3" json:"min_temp_colombo,omitempty"`
	MinTempPuttalam    float32              `protobuf:"fixed32,7,opt,name=min_temp_puttalam,json=minTempPuttalam,proto3" json:"min_temp_puttalam,omitempty"`
	MinTempKurunegala  float32              `protobuf:"fixed32,8,opt,name=min_temp_kurunegala,json=minTempKurunegala,proto3" json:"min_temp_kurunegala,omitempty"`
	MaxTempColombo     float32              `protobuf:"fixed32,9,opt,name=max_temp_colombo,json=maxTempColombo,proto3" json:"max_temp_colombo,omitempty"`
	MaxTempPuttalam    float32              `protobuf:"fixed32,10,opt,name=max_temp_puttalam,json=maxTempPuttalam,proto3" json:"max_temp_puttalam,omitempty"`
	MaxTempKurunegala  float32              `protobuf:"fixed32,11,opt,name=max_temp_kurunegala,json=maxTempKurunegala,proto3" json:"max_temp_kurunegala,omitempty"`
}

func (x *OriginalDataResponse) Reset() {
	*x = OriginalDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginalDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalDataResponse) ProtoMessage() {}

func (x *OriginalDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginalDataResponse.ProtoReflect.Descriptor instead.
func (*OriginalDataResponse) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{2}
}

func (x *OriginalDataResponse) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *OriginalDataResponse) GetPrices() float32 {
	if x != nil {
		return x.Prices
	}
	return 0
}

func (x *OriginalDataResponse) GetRainfallColombo() float32 {
	if x != nil {
		return x.RainfallColombo
	}
	return 0
}

func (x *OriginalDataResponse) GetRainfallPuttalam() float32 {
	if x != nil {
		return x.RainfallPuttalam
	}
	return 0
}

func (x *OriginalDataResponse) GetRainfallKurunegala() float32 {
	if x != nil {
		return x.RainfallKurunegala
	}
	return 0
}

func (x *OriginalDataResponse) GetMinTempColombo() float32 {
	if x != nil {
		return x.MinTempColombo
	}
	return 0
}

func (x *OriginalDataResponse) GetMinTempPuttalam() float32 {
	if x != nil {
		return x.MinTempPuttalam
	}
	return 0
}

func (x *OriginalDataResponse) GetMinTempKurunegala() float32 {
	if x != nil {
		return x.MinTempKurunegala
	}
	return 0
}

func (x *OriginalDataResponse) GetMaxTempColombo() float32 {
	if x != nil {
		return x.MaxTempColombo
	}
	return 0
}

func (x *OriginalDataResponse) GetMaxTempPuttalam() float32 {
	if x != nil {
		return x.MaxTempPuttalam
	}
	return 0
}

func (x *OriginalDataResponse) GetMaxTempKurunegala() float32 {
	if x != nil {
		return x.MaxTempKurunegala
	}
	return 0
}

type OriginalDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalDataList []*OriginalDataResponse `protobuf:"bytes,1,rep,name=originalDataList,proto3" json:"originalDataList,omitempty"`
}

func (x *OriginalDataList) Reset() {
	*x = OriginalDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginalDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalDataList) ProtoMessage() {}

func (x *OriginalDataList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginalDataList.ProtoReflect.Descriptor instead.
func (*OriginalDataList) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{3}
}

func (x *OriginalDataList) GetOriginalDataList() []*OriginalDataResponse {
	if x != nil {
		return x.OriginalDataList
	}
	return nil
}

type PredictedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId int32 `protobuf:"varint,1,opt,name=modelId,proto3" json:"modelId,omitempty"`
}

func (x *PredictedRequest) Reset() {
	*x = PredictedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictedRequest) ProtoMessage() {}

func (x *PredictedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictedRequest.ProtoReflect.Descriptor instead.
func (*PredictedRequest) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{4}
}

func (x *PredictedRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

type PredictedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Values float32              `protobuf:"fixed32,2,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *PredictedResponse) Reset() {
	*x = PredictedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictedResponse) ProtoMessage() {}

func (x *PredictedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictedResponse.ProtoReflect.Descriptor instead.
func (*PredictedResponse) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{5}
}

func (x *PredictedResponse) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *PredictedResponse) GetValues() float32 {
	if x != nil {
		return x.Values
	}
	return 0
}

type PredictedResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredictedResponseList []*PredictedResponse `protobuf:"bytes,1,rep,name=predictedResponseList,proto3" json:"predictedResponseList,omitempty"`
}

func (x *PredictedResponseList) Reset() {
	*x = PredictedResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictedResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictedResponseList) ProtoMessage() {}

func (x *PredictedResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictedResponseList.ProtoReflect.Descriptor instead.
func (*PredictedResponseList) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{6}
}

func (x *PredictedResponseList) GetPredictedResponseList() []*PredictedResponse {
	if x != nil {
		return x.PredictedResponseList
	}
	return nil
}

type BatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchNumber int32 `protobuf:"varint,1,opt,name=batchNumber,proto3" json:"batchNumber,omitempty"`
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{7}
}

func (x *BatchRequest) GetBatchNumber() int32 {
	if x != nil {
		return x.BatchNumber
	}
	return 0
}

type BatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId         int32   `protobuf:"varint,1,opt,name=modelId,proto3" json:"modelId,omitempty"`
	ModelName       string  `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	PlotFit         []byte  `protobuf:"bytes,3,opt,name=plotFit,proto3" json:"plotFit,omitempty"`
	PlotValidation  []byte  `protobuf:"bytes,4,opt,name=plotValidation,proto3" json:"plotValidation,omitempty"`
	TestPredictions []byte  `protobuf:"bytes,5,opt,name=testPredictions,proto3" json:"testPredictions,omitempty"`
	Mse             float32 `protobuf:"fixed32,6,opt,name=mse,proto3" json:"mse,omitempty"`
	Mape            float32 `protobuf:"fixed32,7,opt,name=mape,proto3" json:"mape,omitempty"`
}

func (x *BatchResponse) Reset() {
	*x = BatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResponse) ProtoMessage() {}

func (x *BatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResponse.ProtoReflect.Descriptor instead.
func (*BatchResponse) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{8}
}

func (x *BatchResponse) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *BatchResponse) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *BatchResponse) GetPlotFit() []byte {
	if x != nil {
		return x.PlotFit
	}
	return nil
}

func (x *BatchResponse) GetPlotValidation() []byte {
	if x != nil {
		return x.PlotValidation
	}
	return nil
}

func (x *BatchResponse) GetTestPredictions() []byte {
	if x != nil {
		return x.TestPredictions
	}
	return nil
}

func (x *BatchResponse) GetMse() float32 {
	if x != nil {
		return x.Mse
	}
	return 0
}

func (x *BatchResponse) GetMape() float32 {
	if x != nil {
		return x.Mape
	}
	return 0
}

type BatchResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchResponse []*BatchResponse `protobuf:"bytes,1,rep,name=batchResponse,proto3" json:"batchResponse,omitempty"`
}

func (x *BatchResponseList) Reset() {
	*x = BatchResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResponseList) ProtoMessage() {}

func (x *BatchResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResponseList.ProtoReflect.Descriptor instead.
func (*BatchResponseList) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{9}
}

func (x *BatchResponseList) GetBatchResponse() []*BatchResponse {
	if x != nil {
		return x.BatchResponse
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ProviderId         string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
	AccessToken        string `protobuf:"bytes,3,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	EmailVerified      bool   `protobuf:"varint,4,opt,name=emailVerified,proto3" json:"emailVerified,omitempty"`
	Email              string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	OauthAccessToken   string `protobuf:"bytes,6,opt,name=oauthAccessToken,proto3" json:"oauthAccessToken,omitempty"`
	FirstName          string `protobuf:"bytes,7,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName           string `protobuf:"bytes,8,opt,name=lastName,proto3" json:"lastName,omitempty"`
	FullName           string `protobuf:"bytes,9,opt,name=fullName,proto3" json:"fullName,omitempty"`
	DisplayName        string `protobuf:"bytes,10,opt,name=displayName,proto3" json:"displayName,omitempty"`
	ExpiresIn          string `protobuf:"bytes,11,opt,name=expiresIn,proto3" json:"expiresIn,omitempty"`
	LocalId            string `protobuf:"bytes,12,opt,name=localId,proto3" json:"localId,omitempty"`
	RefreshToken       string `protobuf:"bytes,13,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	Password           string `protobuf:"bytes,14,opt,name=password,proto3" json:"password,omitempty"`
	Gender             string `protobuf:"bytes,15,opt,name=gender,proto3" json:"gender,omitempty"`
	Address            string `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	Age                int32  `protobuf:"varint,17,opt,name=age,proto3" json:"age,omitempty"`
	Experience         string `protobuf:"bytes,18,opt,name=experience,proto3" json:"experience,omitempty"`
	PlayingTime        int32  `protobuf:"varint,19,opt,name=playingTime,proto3" json:"playingTime,omitempty"`
	PreferredPlatforms string `protobuf:"bytes,20,opt,name=preferredPlatforms,proto3" json:"preferredPlatforms,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{10}
}

func (x *Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Request) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *Request) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Request) GetEmailVerified() bool {
	if x != nil {
		return x.EmailVerified
	}
	return false
}

func (x *Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Request) GetOauthAccessToken() string {
	if x != nil {
		return x.OauthAccessToken
	}
	return ""
}

func (x *Request) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Request) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Request) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Request) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Request) GetExpiresIn() string {
	if x != nil {
		return x.ExpiresIn
	}
	return ""
}

func (x *Request) GetLocalId() string {
	if x != nil {
		return x.LocalId
	}
	return ""
}

func (x *Request) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Request) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Request) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Request) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Request) GetExperience() string {
	if x != nil {
		return x.Experience
	}
	return ""
}

func (x *Request) GetPlayingTime() int32 {
	if x != nil {
		return x.PlayingTime
	}
	return 0
}

func (x *Request) GetPreferredPlatforms() string {
	if x != nil {
		return x.PreferredPlatforms
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users            *Users `protobuf:"bytes,1,opt,name=users,proto3" json:"users,omitempty"`
	OauthAccessToken string `protobuf:"bytes,2,opt,name=oauthAccessToken,proto3" json:"oauthAccessToken,omitempty"`
	FirstName        string `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName         string `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	FullName         string `protobuf:"bytes,5,opt,name=fullName,proto3" json:"fullName,omitempty"`
	ExpiresIn        string `protobuf:"bytes,6,opt,name=expiresIn,proto3" json:"expiresIn,omitempty"`
	IdpUrl           string `protobuf:"bytes,7,opt,name=idpUrl,proto3" json:"idpUrl,omitempty"`
	IsNewUser        bool   `protobuf:"varint,8,opt,name=isNewUser,proto3" json:"isNewUser,omitempty"`
	RefreshToken     string `protobuf:"bytes,9,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{11}
}

func (x *Response) GetUsers() *Users {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Response) GetOauthAccessToken() string {
	if x != nil {
		return x.OauthAccessToken
	}
	return ""
}

func (x *Response) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Response) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Response) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Response) GetExpiresIn() string {
	if x != nil {
		return x.ExpiresIn
	}
	return ""
}

func (x *Response) GetIdpUrl() string {
	if x != nil {
		return x.IdpUrl
	}
	return ""
}

func (x *Response) GetIsNewUser() bool {
	if x != nil {
		return x.IsNewUser
	}
	return false
}

func (x *Response) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string               `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Email              string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified      bool                 `protobuf:"varint,3,opt,name=emailVerified,proto3" json:"emailVerified,omitempty"`
	DisplayName        string               `protobuf:"bytes,4,opt,name=displayName,proto3" json:"displayName,omitempty"`
	LinkedAccounts     *LinkedAccounts      `protobuf:"bytes,5,opt,name=linkedAccounts,proto3" json:"linkedAccounts,omitempty"`
	PhotoUrl           string               `protobuf:"bytes,6,opt,name=photoUrl,proto3" json:"photoUrl,omitempty"`
	UpdatedAt          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Disabled           bool                 `protobuf:"varint,8,opt,name=disabled,proto3" json:"disabled,omitempty"`
	CreatedAt          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	PasswordHash       string               `protobuf:"bytes,10,opt,name=passwordHash,proto3" json:"passwordHash,omitempty"`
	Gender             string               `protobuf:"bytes,11,opt,name=gender,proto3" json:"gender,omitempty"`
	Address            string               `protobuf:"bytes,12,opt,name=address,proto3" json:"address,omitempty"`
	Age                int32                `protobuf:"varint,13,opt,name=age,proto3" json:"age,omitempty"`
	Experience         string               `protobuf:"bytes,14,opt,name=experience,proto3" json:"experience,omitempty"`
	PlayingTime        int32                `protobuf:"varint,15,opt,name=playingTime,proto3" json:"playingTime,omitempty"`
	PreferredPlatforms string               `protobuf:"bytes,16,opt,name=preferredPlatforms,proto3" json:"preferredPlatforms,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{12}
}

func (x *Users) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Users) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Users) GetEmailVerified() bool {
	if x != nil {
		return x.EmailVerified
	}
	return false
}

func (x *Users) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Users) GetLinkedAccounts() *LinkedAccounts {
	if x != nil {
		return x.LinkedAccounts
	}
	return nil
}

func (x *Users) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

func (x *Users) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Users) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Users) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Users) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *Users) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Users) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Users) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Users) GetExperience() string {
	if x != nil {
		return x.Experience
	}
	return ""
}

func (x *Users) GetPlayingTime() int32 {
	if x != nil {
		return x.PlayingTime
	}
	return 0
}

func (x *Users) GetPreferredPlatforms() string {
	if x != nil {
		return x.PreferredPlatforms
	}
	return ""
}

type LinkedAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderId  string `protobuf:"bytes,1,opt,name=providerId,proto3" json:"providerId,omitempty"`
	FederatedId string `protobuf:"bytes,2,opt,name=federatedId,proto3" json:"federatedId,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *LinkedAccounts) Reset() {
	*x = LinkedAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_membership_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedAccounts) ProtoMessage() {}

func (x *LinkedAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_protos_membership_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedAccounts.ProtoReflect.Descriptor instead.
func (*LinkedAccounts) Descriptor() ([]byte, []int) {
	return file_protos_membership_proto_rawDescGZIP(), []int{13}
}

func (x *LinkedAccounts) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *LinkedAccounts) GetFederatedId() string {
	if x != nil {
		return x.FederatedId
	}
	return ""
}

func (x *LinkedAccounts) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_protos_membership_proto protoreflect.FileDescriptor

var file_protos_membership_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2f, 0x0a,
	0x13, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0xf3,
	0x03, 0x0a, 0x14, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x72, 0x61, 0x69, 0x6e, 0x66, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x6d, 0x62, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x72, 0x61, 0x69, 0x6e, 0x66,
	0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x61,
	0x69, 0x6e, 0x66, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x75, 0x74, 0x74, 0x61, 0x6c, 0x61, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x72, 0x61, 0x69, 0x6e, 0x66, 0x61, 0x6c, 0x6c, 0x50,
	0x75, 0x74, 0x74, 0x61, 0x6c, 0x61, 0x6d, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x61, 0x69, 0x6e, 0x66,
	0x61, 0x6c, 0x6c, 0x5f, 0x6b, 0x75, 0x72, 0x75, 0x6e, 0x65, 0x67, 0x61, 0x6c, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x72, 0x61, 0x69, 0x6e, 0x66, 0x61, 0x6c, 0x6c, 0x4b, 0x75,
	0x72, 0x75, 0x6e, 0x65, 0x67, 0x61, 0x6c, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6c, 0x6f, 0x6d,
	0x62, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x70,
	0x75, 0x74, 0x74, 0x61, 0x6c, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6d,
	0x69, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x50, 0x75, 0x74, 0x74, 0x61, 0x6c, 0x61, 0x6d, 0x12, 0x2e,
	0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x6b, 0x75, 0x72, 0x75, 0x6e,
	0x65, 0x67, 0x61, 0x6c, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x6d, 0x69, 0x6e,
	0x54, 0x65, 0x6d, 0x70, 0x4b, 0x75, 0x72, 0x75, 0x6e, 0x65, 0x67, 0x61, 0x6c, 0x61, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x6d,
	0x62, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x54, 0x65, 0x6d,
	0x70, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x70, 0x75, 0x74, 0x74, 0x61, 0x6c, 0x61, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x54, 0x65, 0x6d, 0x70, 0x50, 0x75, 0x74, 0x74,
	0x61, 0x6c, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x5f, 0x6b, 0x75, 0x72, 0x75, 0x6e, 0x65, 0x67, 0x61, 0x6c, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x54, 0x65, 0x6d, 0x70, 0x4b, 0x75, 0x72, 0x75, 0x6e, 0x65,
	0x67, 0x61, 0x6c, 0x61, 0x22, 0x60, 0x0a, 0x10, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0x6c, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x15, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x15, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x30, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xd9, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6c, 0x6f, 0x74, 0x46, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x6c,
	0x6f, 0x74, 0x46, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x6f, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70,
	0x6c, 0x6f, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x65, 0x22, 0x54, 0x0a,
	0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xf1, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x64, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x64, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc7, 0x04, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0e, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x73, 0x22, 0x68, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x32, 0xc0, 0x04, 0x0a, 0x0b,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x55, 0x70, 0x12, 0x13, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x13, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x13, 0x67,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x85, 0x01, 0x0a, 0x1b,
	0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x2f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x42, 0x19,
	0x5a, 0x17, 0x2e, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x3b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_membership_proto_rawDescOnce sync.Once
	file_protos_membership_proto_rawDescData = file_protos_membership_proto_rawDesc
)

func file_protos_membership_proto_rawDescGZIP() []byte {
	file_protos_membership_proto_rawDescOnce.Do(func() {
		file_protos_membership_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_membership_proto_rawDescData)
	})
	return file_protos_membership_proto_rawDescData
}

var file_protos_membership_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protos_membership_proto_goTypes = []interface{}{
	(*Empty)(nil),                 // 0: membership.Empty
	(*OriginalDataRequest)(nil),   // 1: membership.OriginalDataRequest
	(*OriginalDataResponse)(nil),  // 2: membership.OriginalDataResponse
	(*OriginalDataList)(nil),      // 3: membership.OriginalDataList
	(*PredictedRequest)(nil),      // 4: membership.PredictedRequest
	(*PredictedResponse)(nil),     // 5: membership.PredictedResponse
	(*PredictedResponseList)(nil), // 6: membership.PredictedResponseList
	(*BatchRequest)(nil),          // 7: membership.BatchRequest
	(*BatchResponse)(nil),         // 8: membership.BatchResponse
	(*BatchResponseList)(nil),     // 9: membership.BatchResponseList
	(*Request)(nil),               // 10: membership.Request
	(*Response)(nil),              // 11: membership.Response
	(*Users)(nil),                 // 12: membership.Users
	(*LinkedAccounts)(nil),        // 13: membership.LinkedAccounts
	(*timestamp.Timestamp)(nil),   // 14: google.protobuf.Timestamp
}
var file_protos_membership_proto_depIdxs = []int32{
	14, // 0: membership.OriginalDataResponse.date:type_name -> google.protobuf.Timestamp
	2,  // 1: membership.OriginalDataList.originalDataList:type_name -> membership.OriginalDataResponse
	14, // 2: membership.PredictedResponse.date:type_name -> google.protobuf.Timestamp
	5,  // 3: membership.PredictedResponseList.predictedResponseList:type_name -> membership.PredictedResponse
	8,  // 4: membership.BatchResponseList.batchResponse:type_name -> membership.BatchResponse
	12, // 5: membership.Response.users:type_name -> membership.Users
	13, // 6: membership.Users.linkedAccounts:type_name -> membership.LinkedAccounts
	14, // 7: membership.Users.updatedAt:type_name -> google.protobuf.Timestamp
	14, // 8: membership.Users.createdAt:type_name -> google.protobuf.Timestamp
	10, // 9: membership.DataService.signUp:input_type -> membership.Request
	10, // 10: membership.DataService.passwordSignIn:input_type -> membership.Request
	7,  // 11: membership.DataService.getModelDataByBatch:input_type -> membership.BatchRequest
	4,  // 12: membership.DataService.getPredictedValuesByModelId:input_type -> membership.PredictedRequest
	1,  // 13: membership.DataService.getOriginalData:input_type -> membership.OriginalDataRequest
	11, // 14: membership.DataService.signUp:output_type -> membership.Response
	11, // 15: membership.DataService.passwordSignIn:output_type -> membership.Response
	9,  // 16: membership.DataService.getModelDataByBatch:output_type -> membership.BatchResponseList
	6,  // 17: membership.DataService.getPredictedValuesByModelId:output_type -> membership.PredictedResponseList
	3,  // 18: membership.DataService.getOriginalData:output_type -> membership.OriginalDataList
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_protos_membership_proto_init() }
func file_protos_membership_proto_init() {
	if File_protos_membership_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_membership_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginalDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginalDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginalDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictedResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_membership_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_membership_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_membership_proto_goTypes,
		DependencyIndexes: file_protos_membership_proto_depIdxs,
		MessageInfos:      file_protos_membership_proto_msgTypes,
	}.Build()
	File_protos_membership_proto = out.File
	file_protos_membership_proto_rawDesc = nil
	file_protos_membership_proto_goTypes = nil
	file_protos_membership_proto_depIdxs = nil
}
